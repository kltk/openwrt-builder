name: Build GL-iNet

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: false
        type: boolean
      clean:
        description: 'clean cache'
        required: false
        default: false
        type: boolean
      profile:
        type: choice
        description: 选择配置
        # default: '["gl-axt1800"]'
        options:
        - '["gl-axt1800"]'

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    name: Build ${{matrix.profile}}
    strategy:
      fail-fast: false
      matrix:
        profile: ${{ fromJSON( github.event.inputs.profile || '["acrh17-lienol-2102"]') }}

    steps:
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt install build-essential libncurses5-dev gawk git libssl-dev gettext zlib1g-dev swig unzip time rsync python3 python3-setuptools python3-yaml

    - name: Clone Repo
      run: |
        git config --global user.email 'youremail.com'
        git config --global user.name 'your name'
        git clone https://github.com/gl-inet/gl-infra-builder.git
        cd gl-infra-builder
        python3 setup.py -c configs/config-wlan-ap.yml
        cd wlan-ap/openwrt
        git clone https://github.com/gl-inet/glinet4.x.git
        cp ./glinet4.x/pkg_config/gl_pkg_config_axt1800.mk  ./glinet4.x/ipq60xx/gl_pkg_config.mk
        cp ./glinet4.x/pkg_config/glinet_depends_axt1800.yml  ./profiles/glinet_depends.yml
        ./scripts/gen_config.py glinet_depends

    - name: Download packages
      run: |
        cd gl-infra-builder/wlan-ap/openwrt
        make download -j8

    - name: Compile the firmware
      id: compile
      run: |
        cd gl-infra-builder/wlan-ap/openwrt
        make V=s -j$(nproc) GL_PKGDIR=`pwd`/glinet4.x/ipq60xx/
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload openwrt-imagebuilder-ipq807x-ipq60xx.Linux-x86_64.tar.xz
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success'
      with:
        name: openwrt-imagebuilder-ipq807x-ipq60xx.Linux-x86_64.tar.xz
        path: gl-infra-builder/wlan-ap/openwrt/bin/targets/ipq807x/ipq60xx/openwrt-imagebuilder-ipq807x-ipq60xx.Linux-x86_64.tar.xz

    - name: Organize files
      run: |
        cd gl-infra-builder/wlan-ap/openwrt
        find bin -iname '*.apk' -delete
        rm -f bin/targets/ipq807x/ipq60xx/openwrt-imagebuilder-ipq807x-ipq60xx.Linux-x86_64.tar.xz
        cp .config bin/targets/ipq807x/ipq60xx/config

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success'
      with:
        name: OpenWrt_bin
        path: gl-infra-builder/wlan-ap/openwrt/bin
