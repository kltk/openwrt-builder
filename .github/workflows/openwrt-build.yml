name: Openwrt-Build

on:
  # release:
  #   types: [published]
  push:
    branches:
      - main
    # paths:
    #   - 'start'
  schedule:
    - cron: 0 20 * * *
  # watch:
  #   types: [started]

env:
  RUN_VALIDATION: true

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    name: Build ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [lienol-acrh17]

    steps:
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache download & ccache
      uses: actions/cache@v2
      with:
        path: ~/cache
        key: openwrt-${{ runner.os }}-${{ github.sha }}
        restore-keys: |
          openwrt-${{ runner.os }}-${{ github.sha }}
          openwrt-${{ runner.os }}-
          openwrt-

    - name: Build
      id: compile
      run: |
        ./bin/build-openwrt.sh ${{matrix.target}}
        echo "::set-output name=status::success"

    - name: Assemble Firmware
      run: |
          rm -rf ./Firmware/
          mkdir -p ./Firmware/
          find openwrt/bin/targets/ -name "*bin*" | xargs -i mv -f {} ./Firmware/
          find openwrt/bin/targets/ -name "*img*" | xargs -i mv -f {} ./Firmware/

    - name: Upload packages directory
      if: steps.compile.outputs.status == 'success'
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_packages_${{matrix.target}}
        path: openwrt/bin/packages

    - name: Upload targets directory
      if: steps.compile.outputs.status == 'success'
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_targets_${{matrix.target}}
        path: openwrt/bin/targets

    - name: Upload Firmware
      if: steps.compile.outputs.status == 'success'
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_firmware_${{matrix.target}}
        path: ./Firmware/
